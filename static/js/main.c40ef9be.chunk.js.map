{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","LENGTH","ALPHABET","REVERSE","App","useState","isReverse","setReverse","sortField","setSortField","visibleGoods","goods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","classNames","onClick","event","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAsBF,IAAMC,EAAS,SACTC,EAAW,WACXC,EAAU,UAEHC,EAAM,WACjB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA3BR,SAA0BA,EAA1B,GAAwD,IAAdF,EAAa,EAAbA,UAClCG,EAAK,YAAOD,GAElB,GAAIF,EACF,OAAQA,GACN,KAAKN,EACH,OAAOS,EAAMC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAC1D,KAAKb,EACH,OAAOU,EAAMC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAC3D,KAAKb,EACH,OAAOQ,EAAMM,UACf,QACE,OAAO,EAIb,OAAOP,EAWcQ,CAAiBlB,EAAiB,CAAEQ,cAEzD,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYb,IAAcN,IAE5BoB,QAAS,SAACC,GACRd,EAAaP,IANjB,iCAYA,wBACEkB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYb,IAAcP,IAE5BqB,QAAS,WACPb,EAAaR,IANjB,4BAWA,wBACEmB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAA0B,IAAdf,IAEdgB,QAAS,WACPf,GAAYD,GACZG,EAAaN,IAPjB,sBAYEK,GAAaF,IACb,wBACEc,KAAK,SACLD,UAAWE,IAAW,SAAU,YAAa,YAC7CC,QAAS,WACPb,EAAa,KAJjB,sBAWHC,EAAac,KAAI,SAAAC,GAAI,OACpB,6BACE,oBAAI,UAAQ,OAAZ,SAAoBA,KADbA,UC/FjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c40ef9be.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(visibleGoods, { sortField }) {\n  const goods = [...visibleGoods];\n\n  if (sortField) {\n    switch (sortField) {\n      case ALPHABET:\n        return goods.sort((good1, good2) => good1.localeCompare(good2));\n      case LENGTH:\n        return goods.sort((good1, good2) => good1.length - good2.length);\n      case REVERSE:\n        return goods.reverse();\n      default:\n        return 0;\n    }\n  }\n\n  return visibleGoods;\n}\n\nconst LENGTH = 'length';\nconst ALPHABET = 'alphabet';\nconst REVERSE = 'reverse';\n\nexport const App = () => {\n  const [isReverse, setReverse] = useState(false);\n  const [sortField, setSortField] = useState('');\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, { sortField });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortField !== ALPHABET,\n          })}\n          onClick={(event) => {\n            setSortField(ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortField !== LENGTH,\n          })}\n          onClick={() => {\n            setSortField(LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': isReverse === false,\n          })}\n          onClick={() => {\n            setReverse(!isReverse);\n            setSortField(REVERSE);\n          }}\n        >\n          Reverse\n        </button>\n        {(sortField || isReverse) && (\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-danger', 'is-light')}\n            onClick={() => {\n              setSortField('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      {visibleGoods.map(good => (\n        <ul key={good}>\n          <li data-cy=\"Good\">{good}</li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}