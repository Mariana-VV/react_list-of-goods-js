{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","LENGTH","ALPHABET","App","useState","isReversed","setReversed","sortField","setSortField","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","classNames","onClick","event","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAS,SACTC,EAAW,WAyBV,IAAMC,EAAM,WACjB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA3BR,SAA0BC,EAA1B,GAA6D,IAA1BH,EAAyB,EAAzBA,UAAWF,EAAc,EAAdA,WACtCM,EAAa,YAAOD,GAE1B,GAAIH,EACF,OAAQA,GACN,KAAKL,EACHS,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MACF,KAAKb,EACHU,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAC1D,MACF,QACE,OAAO,EAQb,OAJIX,GACFM,EAAcM,UAGTN,EAOcO,CAAiBlB,EAAiB,CACrDO,YACAF,eAGF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYd,IAAcL,IAE5BoB,QAAS,SAACC,GACRf,EAAaN,IANjB,iCAYA,wBACEkB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYd,IAAcN,IAE5BqB,QAAS,WACPd,EAAaP,IANjB,4BAWA,wBACEmB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAA2B,IAAfhB,IAEdiB,QAAS,WACPhB,GAAaD,IANjB,sBAWEE,GAAaF,IACb,wBACEe,KAAK,SACLD,UAAWE,IAAW,SAAU,YAAa,YAC7CC,QAAS,WACPd,EAAa,IACbF,GAAY,IALhB,sBAYJ,6BACGG,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCtGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ba4ec4b2.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst LENGTH = 'length';\nconst ALPHABET = 'alphabet';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    switch (sortField) {\n      case ALPHABET:\n        preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n      case LENGTH:\n        preparedGoods.sort((good1, good2) => good1.length - good2.length);\n        break;\n      default:\n        return 0;\n    }\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortField, setSortField] = useState('');\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    isReversed,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortField !== ALPHABET,\n          })}\n          onClick={(event) => {\n            setSortField(ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortField !== LENGTH,\n          })}\n          onClick={() => {\n            setSortField(LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': isReversed === false,\n          })}\n          onClick={() => {\n            setReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-danger', 'is-light')}\n            onClick={() => {\n              setSortField('');\n              setReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}